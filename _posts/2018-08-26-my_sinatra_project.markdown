---
layout: post
title:      "My Sinatra Project"
date:       2018-08-26 21:53:50 +0000
permalink:  my_sinatra_project
---


My second project ended up being the most fun I've had coding so far during my time at Flatiron School. I've really enjoyed expressing my ideas through the Sinatra framework. In case you are not familiar with Sinatra, it is a framework used by developers to create web applications. It is not a programming language but a set of tools that uses Ruby to create websites and the logic behind them. It is smaller than Ruby's most popular web framework: Ruby on Rails. However, it is still powerful especially when you need a small web application set up quickly. Some people say it's a dead framework but that's simply not true. The most recent release was in June 2018. In fact, since I have been exploring companies to work for as a professional web developer I have seen Sinatra on a couple job descriptions or mentioned as a tool used by that company. It has been used at big companies like Apple and LinkedIn. A great thing about it is that it is Open Source, so it is completely free to use. Additionally, anyone can suggest ideas or even submit pull requests to the developers. You can find the github repository [here.](https://github.com/sinatra/sinatra/)

A web development project is typically created to solve a problem. That problem may be a business problem, communication problem or a way to raise awareness about a social cause that is currently lacking. So when coming up with projects to show off to employers and grow my skills I try to think about a real life issue that an app can help solve. I map out user cases to come up with useful features. I have a few people close to me that are artists and one of their issues is finding places to sell art locally. I decided to create an application where you can post artworks so other users of the app can purchase them. This involved several models and database tables. I wrote a lot of logic to make the transactions realistic. For example, I wrote code to subtract the bought quantity from the quantity available to sell. If a transaction was canceled I had to add that quantity back to the available quantity. I also made sure that transactions were private so only the buyers and sellers could view transactions they are associated with. I was also able to practice alot of the skills I've learned earlier like Ruby data structures and HTML/CSS. There are a ton more features that I want to add to my project like location tracking and email confirmation. However, for now I have a product I am proud of that exceeds the Minimally Viable Product for this assignment. 
